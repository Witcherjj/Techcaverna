{"ast":null,"code":"// Importa a constante da URL base da API\nimport API_BASE_URL from '../config';\n\n// Função para login\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' // Corrigido para JSON\n      },\n      body: JSON.stringify({\n        // Enviando como JSON\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Login failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\n\n// Função para registro\nexport const registerUser = async (username, password, confirmPassword) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' // Corrigido para JSON\n      },\n      body: JSON.stringify({\n        // Enviando como JSON\n        username,\n        password,\n        confirm_password: confirmPassword\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Registration failed: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error during registration:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","loginUser","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","json","error","console","registerUser","confirmPassword","confirm_password"],"sources":["/home/ec2-user/techcaverna-frontend/src/api/auth.js"],"sourcesContent":["// Importa a constante da URL base da API\nimport API_BASE_URL from '../config';\n\n// Função para login\nexport const loginUser = async (username, password) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json', // Corrigido para JSON\n            },\n            body: JSON.stringify({ // Enviando como JSON\n                username,\n                password,\n            }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`Login failed: ${response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error('Error during login:', error);\n        throw error;\n    }\n};\n\n// Função para registro\nexport const registerUser = async (username, password, confirmPassword) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json', // Corrigido para JSON\n            },\n            body: JSON.stringify({ // Enviando como JSON\n                username,\n                password,\n                confirm_password: confirmPassword,\n            }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`Registration failed: ${response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error('Error during registration:', error);\n        throw error;\n    }\n};\n"],"mappings":"AAAA;AACA,OAAOA,YAAY,MAAM,WAAW;;AAEpC;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACnD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,QAAQ,EAAE;MAClDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB,CAAE;MACxC,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE;QACnBR,QAAQ;QACRC;MACJ,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,iBAAiBR,QAAQ,CAACS,UAAU,EAAE,CAAC;IAC3D;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOf,QAAQ,EAAEC,QAAQ,EAAEe,eAAe,KAAK;EACvE,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,WAAW,EAAE;MACrDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB,CAAE;MACxC,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE;QACnBR,QAAQ;QACRC,QAAQ;QACRgB,gBAAgB,EAAED;MACtB,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACd,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,wBAAwBR,QAAQ,CAACS,UAAU,EAAE,CAAC;IAClE;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}