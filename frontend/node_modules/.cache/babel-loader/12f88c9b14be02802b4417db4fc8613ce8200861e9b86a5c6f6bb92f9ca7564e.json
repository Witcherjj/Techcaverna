{"ast":null,"code":"import axios from'axios';const api=axios.create({baseURL:'/api',// Base da API configurada no Nginx\ntimeout:5000,// Timeout de 5 segundos\nheaders:{'Content-Type':'application/json',// Garantir o envio de JSON\nAccept:'application/json'// Aceitar apenas JSON nas respostas\n}});// Interceptor para adicionar token (opcional, para autenticação JWT futura)\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>Promise.reject(error));export default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["/home/ec2-user/techcaverna-frontend/src/api/axios-config.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: '/api', // Base da API configurada no Nginx\n  timeout: 5000, // Timeout de 5 segundos\n  headers: {\n    'Content-Type': 'application/json', // Garantir o envio de JSON\n    Accept: 'application/json', // Aceitar apenas JSON nas respostas\n  },\n});\n\n// Interceptor para adicionar token (opcional, para autenticação JWT futura)\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAE,MAAM,CAAE;AACjBC,OAAO,CAAE,IAAI,CAAE;AACfC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAAE;AACpCC,MAAM,CAAE,kBAAoB;AAC9B,CACF,CAAC,CAAC,CAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACL,OAAO,CAACS,aAAa,CAAG,UAAUH,KAAK,EAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAK,KAAK,EAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC,CAED,cAAe,CAAAd,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}