{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/techcaverna-frontend/src/components/Customers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Customers({\n  token\n}) {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      try {\n        const response = await axios.get('http://[IP_DO_BACKEND]:5000/api/customers', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setCustomers(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar clientes:', error);\n      }\n    };\n    fetchCustomers();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [customer.name, \" - \", customer.email]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Customers, \"h68b3hq6gv818inqQQjo1WvNv/E=\");\n_c = Customers;\nexport default Customers;\nvar _c;\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Customers","token","_s","customers","setCustomers","fetchCustomers","response","get","headers","Authorization","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","customer","name","email","id","_c","$RefreshReg$"],"sources":["/home/ec2-user/techcaverna-frontend/src/components/Customers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Customers({ token }) {\n  const [customers, setCustomers] = useState([]);\n\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      try {\n        const response = await axios.get('http://[IP_DO_BACKEND]:5000/api/customers', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        setCustomers(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar clientes:', error);\n      }\n    };\n\n    fetchCustomers();\n  }, [token]);\n\n  return (\n    <div>\n      <h2>Lista de Clientes</h2>\n      <ul>\n        {customers.map((customer) => (\n          <li key={customer.id}>{customer.name} - {customer.email}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Customers;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,2CAA2C,EAAE;UAC5EC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUR,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFG,YAAY,CAACE,QAAQ,CAACI,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDN,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlB,OAAA;MAAAc,QAAA,EACGV,SAAS,CAACe,GAAG,CAAEC,QAAQ,iBACtBpB,OAAA;QAAAc,QAAA,GAAuBM,QAAQ,CAACC,IAAI,EAAC,KAAG,EAACD,QAAQ,CAACE,KAAK;MAAA,GAA9CF,QAAQ,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwC,CAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CA5BQF,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA8BlB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}