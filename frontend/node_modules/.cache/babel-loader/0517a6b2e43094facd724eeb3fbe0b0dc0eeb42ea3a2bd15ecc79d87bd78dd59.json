{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: '/api',\n  // Base da API configurada no Nginx\n  timeout: 5000,\n  // Timeout de 5 segundos\n  headers: {\n    'Content-Type': 'application/json',\n    // Garantir o envio de JSON\n    Accept: 'application/json' // Aceitar apenas JSON nas respostas\n  }\n});\n\n// Interceptor para adicionar token (opcional, para autenticação JWT futura)\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["/home/ec2-user/techcaverna-frontend/src/api/axios-config.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: '/api', // Base da API configurada no Nginx\n  timeout: 5000, // Timeout de 5 segundos\n  headers: {\n    'Content-Type': 'application/json', // Garantir o envio de JSON\n    Accept: 'application/json', // Aceitar apenas JSON nas respostas\n  },\n});\n\n// Interceptor para adicionar token (opcional, para autenticação JWT futura)\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EAAE;EACjBC,OAAO,EAAE,IAAI;EAAE;EACfC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAAE;IACpCC,MAAM,EAAE,kBAAkB,CAAE;EAC9B;AACF,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}