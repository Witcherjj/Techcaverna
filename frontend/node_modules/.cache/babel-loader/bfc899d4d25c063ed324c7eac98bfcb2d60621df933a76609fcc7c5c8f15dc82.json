{"ast":null,"code":"// src/components/Register.js\nimport React,{useState}from'react';import{registerUser}from'../api/auth';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const handleRegister=async e=>{e.preventDefault();const result=await registerUser(username,password,confirmPassword);if(result.message===\"Usuário registrado com sucesso\"){console.log(\"Registro feito com sucesso!\");}else{console.error(\"Erro:\",result.message);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRegister,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),placeholder:\"Usu\\xE1rio\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Senha\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),placeholder:\"Confirme a Senha\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Registrar\"})]});};export default Register;","map":{"version":3,"names":["React","useState","registerUser","jsx","_jsx","jsxs","_jsxs","Register","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleRegister","e","preventDefault","result","message","console","log","error","onSubmit","children","type","value","onChange","target","placeholder"],"sources":["/home/ec2-user/techcaverna-frontend/src/components/Register.js"],"sourcesContent":["// src/components/Register.js\nimport React, { useState } from 'react';\nimport { registerUser } from '../api/auth';\n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    const result = await registerUser(username, password, confirmPassword);\n    if (result.message === \"Usuário registrado com sucesso\") {\n      console.log(\"Registro feito com sucesso!\");\n    } else {\n      console.error(\"Erro:\", result.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleRegister}>\n      <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Usuário\" />\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Senha\" />\n      <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirme a Senha\" />\n      <button type=\"submit\">Registrar</button>\n    </form>\n  );\n};\n\nexport default Register;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,YAAY,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,eAAe,CAAEC,kBAAkB,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAE1D,KAAM,CAAAa,cAAc,CAAG,KAAO,CAAAC,CAAC,EAAK,CAClCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAf,YAAY,CAACM,QAAQ,CAAEE,QAAQ,CAAEE,eAAe,CAAC,CACtE,GAAIK,MAAM,CAACC,OAAO,GAAK,gCAAgC,CAAE,CACvDC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC5C,CAAC,IAAM,CACLD,OAAO,CAACE,KAAK,CAAC,OAAO,CAAEJ,MAAM,CAACC,OAAO,CAAC,CACxC,CACF,CAAC,CAED,mBACEZ,KAAA,SAAMgB,QAAQ,CAAER,cAAe,CAAAS,QAAA,eAC7BnB,IAAA,UAAOoB,IAAI,CAAC,MAAM,CAACC,KAAK,CAAEjB,QAAS,CAACkB,QAAQ,CAAGX,CAAC,EAAKN,WAAW,CAACM,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE,CAACG,WAAW,CAAC,YAAS,CAAE,CAAC,cAC1GxB,IAAA,UAAOoB,IAAI,CAAC,UAAU,CAACC,KAAK,CAAEf,QAAS,CAACgB,QAAQ,CAAGX,CAAC,EAAKJ,WAAW,CAACI,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE,CAACG,WAAW,CAAC,OAAO,CAAE,CAAC,cAC5GxB,IAAA,UAAOoB,IAAI,CAAC,UAAU,CAACC,KAAK,CAAEb,eAAgB,CAACc,QAAQ,CAAGX,CAAC,EAAKF,kBAAkB,CAACE,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE,CAACG,WAAW,CAAC,kBAAkB,CAAE,CAAC,cACrIxB,IAAA,WAAQoB,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,WAAS,CAAQ,CAAC,EACpC,CAAC,CAEX,CAAC,CAED,cAAe,CAAAhB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}