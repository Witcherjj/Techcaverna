{"ast":null,"code":"// src/api/auth.js\n// Importa a constante da URL base da API\nimport API_BASE_URL from'../config';// Função para login\nexport const loginUser=async(username,password)=>{try{const response=await fetch(`${API_BASE_URL}/login`,{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:new URLSearchParams({username,password})});if(!response.ok){throw new Error(`Login failed: ${response.statusText}`);}return await response.json();}catch(error){console.error('Error during login:',error);throw error;}};// Função para registro\nexport const registerUser=async(username,password,confirmPassword)=>{try{const response=await fetch(`${API_BASE_URL}/register`,{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:new URLSearchParams({username,password,confirm_password:confirmPassword})});if(!response.ok){throw new Error(`Registration failed: ${response.statusText}`);}return await response.json();}catch(error){console.error('Error during registration:',error);throw error;}};","map":{"version":3,"names":["API_BASE_URL","loginUser","username","password","response","fetch","method","headers","body","URLSearchParams","ok","Error","statusText","json","error","console","registerUser","confirmPassword","confirm_password"],"sources":["/home/ec2-user/techcaverna-frontend/src/api/auth.js"],"sourcesContent":["// src/api/auth.js\n\n// Importa a constante da URL base da API\nimport API_BASE_URL from '../config';\n\n// Função para login\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({ username, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Login failed: ${response.statusText}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\n\n// Função para registro\nexport const registerUser = async (username, password, confirmPassword) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        username,\n        password,\n        confirm_password: confirmPassword,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Registration failed: ${response.statusText}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error during registration:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA;AAEA;AACA,MAAO,CAAAA,YAAY,KAAM,WAAW,CAEpC;AACA,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,GAAK,CACrD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,YAAY,QAAQ,CAAE,CACpDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,mCAClB,CAAC,CACDC,IAAI,CAAE,GAAI,CAAAC,eAAe,CAAC,CAAEP,QAAQ,CAAEC,QAAS,CAAC,CAClD,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACM,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,iBAAiBP,QAAQ,CAACQ,UAAU,EAAE,CAAC,CACzD,CAEA,MAAO,MAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,YAAY,CAAG,KAAAA,CAAOd,QAAQ,CAAEC,QAAQ,CAAEc,eAAe,GAAK,CACzE,GAAI,CACF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,YAAY,WAAW,CAAE,CACvDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,mCAClB,CAAC,CACDC,IAAI,CAAE,GAAI,CAAAC,eAAe,CAAC,CACxBP,QAAQ,CACRC,QAAQ,CACRe,gBAAgB,CAAED,eACpB,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACb,QAAQ,CAACM,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwBP,QAAQ,CAACQ,UAAU,EAAE,CAAC,CAChE,CAEA,MAAO,MAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}