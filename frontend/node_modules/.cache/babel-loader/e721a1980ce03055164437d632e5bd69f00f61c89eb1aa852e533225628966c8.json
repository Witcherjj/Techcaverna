{"ast":null,"code":"import React,{useState}from'react';import{loginUser}from'../api/auth';// Verifique se o caminho está correto\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginComponent=()=>{const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[success,setSuccess]=useState('');const handleSubmit=async e=>{e.preventDefault();// Validação simples antes da requisição\nif(!username||!password){setError('Por favor, preencha todos os campos.');return;}try{const user=await loginUser(username,password);// Chama a função de login\nconsole.log('Usuário logado:',user);setError('');setSuccess('Login realizado com sucesso!');// Aqui você pode redirecionar o usuário, ex.:\n// window.location.href = '/dashboard'; ou utilizar uma lib de navegação como react-router\n}catch(err){setSuccess('');setError(err.message||'Erro ao fazer login');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),success&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:success})]});};export default LoginComponent;","map":{"version":3,"names":["React","useState","loginUser","jsx","_jsx","jsxs","_jsxs","LoginComponent","username","setUsername","password","setPassword","error","setError","success","setSuccess","handleSubmit","e","preventDefault","user","console","log","err","message","children","onSubmit","type","placeholder","value","onChange","target","required","style","color"],"sources":["/home/ec2-user/techcaverna-frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { loginUser } from '../api/auth'; // Verifique se o caminho está correto\n\nconst LoginComponent = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validação simples antes da requisição\n    if (!username || !password) {\n      setError('Por favor, preencha todos os campos.');\n      return;\n    }\n\n    try {\n      const user = await loginUser(username, password); // Chama a função de login\n      console.log('Usuário logado:', user);\n\n      setError('');\n      setSuccess('Login realizado com sucesso!');\n      \n      // Aqui você pode redirecionar o usuário, ex.:\n      // window.location.href = '/dashboard'; ou utilizar uma lib de navegação como react-router\n    } catch (err) {\n      setSuccess('');\n      setError(err.message || 'Erro ao fazer login');\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h2>Login</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {success && <p style={{ color: 'green' }}>{success}</p>}\n    </div>\n  );\n};\n\nexport default LoginComponent;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,KAAQ,aAAa,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAe,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB;AACA,GAAI,CAACV,QAAQ,EAAI,CAACE,QAAQ,CAAE,CAC1BG,QAAQ,CAAC,sCAAsC,CAAC,CAChD,OACF,CAEA,GAAI,CACF,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAAjB,SAAS,CAACM,QAAQ,CAAEE,QAAQ,CAAC,CAAE;AAClDU,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEF,IAAI,CAAC,CAEpCN,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,8BAA8B,CAAC,CAE1C;AACA;AACF,CAAE,MAAOO,GAAG,CAAE,CACZP,UAAU,CAAC,EAAE,CAAC,CACdF,QAAQ,CAACS,GAAG,CAACC,OAAO,EAAI,qBAAqB,CAAC,CAChD,CACF,CAAC,CAED,mBACEjB,KAAA,QAAAkB,QAAA,eACElB,KAAA,SAAMmB,QAAQ,CAAET,YAAa,CAAAQ,QAAA,eAC3BpB,IAAA,OAAAoB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdpB,IAAA,UACEsB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEpB,QAAS,CAChBqB,QAAQ,CAAGZ,CAAC,EAAKR,WAAW,CAACQ,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACT,CAAC,cACF3B,IAAA,UACEsB,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAElB,QAAS,CAChBmB,QAAQ,CAAGZ,CAAC,EAAKN,WAAW,CAACM,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACT,CAAC,cACF3B,IAAA,WAAQsB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,CACNZ,KAAK,eAAIR,IAAA,MAAG4B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAT,QAAA,CAAEZ,KAAK,CAAI,CAAC,CAChDE,OAAO,eAAIV,IAAA,MAAG4B,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAAT,QAAA,CAAEV,OAAO,CAAI,CAAC,EACpD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}